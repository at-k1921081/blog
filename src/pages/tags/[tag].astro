---
import { getCollection } from "astro:content";
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { InferEntrySchema } from "astro:content";
import type { RenderedContent } from "astro:content";

type Post = {
	id: string;
	body?: string;
	collection: "blog";
	data: InferEntrySchema<"blog">;
	rendered?: RenderedContent;
	filePath?: string;
};

export async function getStaticPaths() {
	const allPosts = await getCollection("blog");

	const uniqueTags = [
		...new Set(allPosts.map((post) => post.data.tags).flat()),
	];

	return uniqueTags.map((tag) => {
		const filteredPosts = allPosts.filter((post: any) =>
			post.data.tags.includes(tag)
		);
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
	<p>Posts tagged with {tag}</p>
	<ul>
		{
			posts.map((post: Post) => (
				<BlogPost
					url={`/blog/posts/${post.id}/`}
					title={post.data.title}
					id={post.id}
				/>
			))
		}
	</ul>
</BaseLayout>
